{"version":3,"sources":["components/HeadingOnScreen.jsx","components/Menu.jsx","components/Player.js","Wallpapers/Forest.jpg","Wallpapers/Beach.jpg","Wallpapers/City.jpg","Wallpapers/Valley.jpg","Wallpapers/Desert.jpg","Wallpapers/Food.jpg","Wallpapers/Mountain.jpg","Wallpapers/Ocean.jpg","Wallpapers/Countryside.jpg","components/Screen.jsx","components/Frame.jsx","components/Reflection.jsx","components/App.jsx","index.js"],"names":["HeadingOnScreen","id","Menu","audio","duration","interval","props","items","map","item","index","className","style","backgroundColor","option","menu","display","isPlaying","newAudio","url","Audio","addEventListener","e","Math","round","minutes","floor","seconds","document","getElementById","innerHTML","toPrecision","play","setInterval","currentTime","currentTimeAccurate","width","marginLeft","clearInterval","pause","stop","setProgress","xPos","playerWidth","xPosPercent","active","dragStart","dragItem","querySelector","target","drag","rect","getBoundingClientRect","preventDefault","type","touches","clientX","left","dragEnd","Screen","obj","isToggled","useEffect","includes","toggler","togglerDiv","WiFi","Bluetooth","GPS","box","top","random","backgroundImage","wallpaper","padding","alignItems","marginTop","audioName","onClick","audioLink","console","log","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseMove","onTouchMove","text","Frame","wheelMoveDirection","clientY","mainMenuItems","gamesMenuItems","musicMenuItems","songsMenuItems","audioLinks","settingsMenuItems","wallpaperMenuItems","settingsOptionsText","useState","isMoving","setMoving","currentMenu","setCurrentMenu","currentMenuOption","setCurrentMenuOption","setItems","setText","setAudioLink","setAudioName","setIsToggled","Forest","currentWallpaper","setCurrentWallpaper","changeCurrentMenuOption","indexOf","length","topPos","offsetTop","scrollTop","Fragment","undefined","justifyContent","Mountain","Ocean","Valley","Food","City","Beach","Countryside","Desert","Reflection","border","cursor","App","ReactDOM","render"],"mappings":"0JASeA,MAJf,WACI,OAAO,oBAAIC,GAAG,SAAP,SAAgB,gDCiBZC,ICtBXC,EAAOC,EAAUC,EDsBNH,EAnBf,SAAcI,GACV,OACI,sBAAKL,GAAG,OAAR,UAEI,cAAC,EAAD,IACA,6BAGKK,EAAMC,MAAMC,KAAI,SAACC,EAAMC,GACpB,OACI,qBAAmBC,UAAU,cAAcV,GAAE,sBAAiBS,EAAM,GAAKE,MAAO,CAACC,gBAAiBP,EAAMQ,SAASJ,EAAM,GAAK,oBAA5H,SACI,+BAAKD,EAAK,mBAAGE,UAAS,+BAA0BL,EAAMS,KAAhC,UAA+Cd,GAAE,UAAKK,EAAMS,KAAX,kBAAyBL,EAAM,GAAKE,MAAO,CAACI,QAASV,EAAMQ,SAASJ,EAAM,EAAI,eAAiB,cADhKA,EAAM,YEdzB,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,wCTGrCO,EAAY,aAGhB,SAASC,EAASC,IACdhB,EAAQ,IAAIiB,MAAMD,IAGZE,iBAAiB,WAAW,SAASC,GACvClB,EAAYmB,KAAKC,MAAMrB,EAAMC,UAC7B,IAAIqB,EAAUF,KAAKG,MAAMtB,EAAS,IAC9BuB,EAAUvB,EAAS,GACnBuB,EAAQ,GACU,eAAdV,IACJW,SAASC,eAAe,YAAYC,UAApC,UAAmDL,EAAnD,cAAgEE,EAAQI,YAAY,KAIlE,eAAdd,IACJW,SAASC,eAAe,YAAYC,UAApC,UAAmDL,EAAnD,YAA8DE,EAAQI,YAAY,QAK1FC,IAIJ,SAASA,IACLf,EAAY,UAEZd,EAAM6B,OAGN3B,EAAW4B,aAAY,WACnB,GAAkB,eAAdhB,EAA2B,CAC3B,IAAIiB,EAAcX,KAAKC,MAAMrB,EAAM+B,aAC/BT,EAAUF,KAAKG,MAAMQ,EAAY,IACjCP,EAAUO,EAAY,GAGtBN,SAASC,eAAe,gBAAgBC,UADxCH,EAAQ,GAC4CF,EAAU,KAAOE,EAAQI,YAAY,GAGrCN,EAAU,IAAME,EAAQI,YAAY,GAK5F,IAAII,EAAsBhC,EAAM+B,YAChCN,SAASC,eAAe,YAAYjB,MAAMwB,MAA1C,UAAsDD,EAAoB/B,EAAU,IAApF,KACAwB,SAASC,eAAe,gBAAgBjB,MAAMyB,WAA9C,UAAgEF,EAAoB/B,EAAU,IAAK,EAAnG,KAEDD,EAAM+B,cAAgB/B,EAAMC,UAC3BkC,cAAcjC,KAEnB,KAIP,SAASkC,IACLtB,EAAY,SAEZqB,cAAcjC,GAEdF,EAAMoC,QAIV,SAASC,IAEY,eAAdvB,IACCqB,cAAcjC,GACdF,EAAMoC,QACNpC,EAAM+B,YAAc,GAGxBjB,EAAY,aAYhB,SAASwB,EAAYC,EAAMC,GAEvB,IAAMC,EAAeF,EAAKC,EAAa,IAEvCf,SAASC,eAAe,gBAAgBjB,MAAMyB,WAAaO,EAAc,IACzEhB,SAASC,eAAe,YAAYjB,MAAMwB,MAASQ,EAAY,IAAO,IAEtE,IAAMV,EAAeU,EAAY,IAAKxC,EACtCD,EAAM+B,YAAcA,EAQxB,IAAIW,GAAS,EACb,SAASC,EAAUxB,GACf,IAAMyB,EAAWnB,SAASoB,cAAc,iBACtB,eAAd/B,GACIK,EAAE2B,SAAWF,IACbF,GAAS,GAMrB,SAASK,EAAK5B,GAEV,IAEM6B,EAFYvB,SAASoB,cAAc,eAElBI,wBAEjBT,EAAcQ,EAAKf,MACrBS,IAEAvB,EAAE+B,iBASFZ,EANe,cAAXnB,EAAEgC,KACKhC,EAAEiC,QAAQ,GAAGC,QAAUL,EAAKM,KAE5BnC,EAAEkC,QAAUL,EAAKM,KAGNd,IAK9B,SAASe,EAAQpC,GAEbuB,GAAS,EUjBEc,MA5Gf,SAAgBrD,GAEZ,IAAIsD,EAAMtD,EAAMuD,UAmEhB,OAhEAC,qBAAU,WAEN,GADkB,CAAC,OAAQ,YAAa,OACzBC,SAASzD,EAAMS,MAAM,CAChC,IAAIiD,EAAUpC,SAASC,eAAT,kBAAmCvB,EAAMS,OACnDkD,EAAarC,SAASC,eAAT,sBAAuCvB,EAAMS,OAC5C,SAAfT,EAAMS,KACF6C,EAAIM,MACHD,EAAWrD,MAAMC,gBAAkB,YACnCmD,EAAQpD,MAAM6C,KAAO,QAErBQ,EAAWrD,MAAMC,gBAAkB,KACnCmD,EAAQpD,MAAM6C,KAAO,MAEL,cAAfnD,EAAMS,KACR6C,EAAIO,WACHF,EAAWrD,MAAMC,gBAAkB,YACnCmD,EAAQpD,MAAM6C,KAAO,QAErBQ,EAAWrD,MAAMC,gBAAkB,KACnCmD,EAAQpD,MAAM6C,KAAO,MAEL,QAAfnD,EAAMS,OACR6C,EAAIQ,KACPH,EAAWrD,MAAMC,gBAAkB,YACnCmD,EAAQpD,MAAM6C,KAAO,QAEjBQ,EAAWrD,MAAMC,gBAAkB,KACnCmD,EAAQpD,MAAM6C,KAAO,YAK5B,GAAkB,YAAfnD,EAAMS,KAAmB,CAC7B,IAAMsD,EAAMzC,SAASC,eAAe,OAEpCwC,EAAIhD,iBAAiB,aAAa,WAC9B,IAAIiD,EAAM/C,KAAKG,MAAqB,GAAfH,KAAKgD,UACtBd,EAAOlC,KAAKG,MAAqB,GAAfH,KAAKgD,UAC3BF,EAAIzD,MAAM0D,IAAMA,EAAM,IACtBD,EAAIzD,MAAM6C,KAAOA,EAAO,UAIjC,CAACG,EAAKtD,EAAMuD,UAAWvD,EAAMS,OAmBpB,CAAC,WAAY,YAAa,YAAa,YAAa,eAAgB,iBAEzEgD,SAASzD,EAAMS,MAEd,qBAAKd,GAAG,SAAUW,MAAO,CAAC4D,gBAAgB,OAAD,OAASlE,EAAMmE,UAAf,MAAzC,SACI,cAAC,EAAD,CAAM1D,KAAMT,EAAMS,KAAMR,MAAOD,EAAMC,MAAOO,OAAQR,EAAMQ,WAG9C,cAAfR,EAAMS,KACJ,qBAAKd,GAAG,SAAUW,MAAO,CAAC4D,gBAAgB,OAAD,OAASlE,EAAMmE,UAAf,QAC5B,YAAfnE,EAAMS,KAEP,qBAAKd,GAAG,oBAAoBW,MAAO,CAAC8D,QAAS,QAA7C,SACI,qBAAKzE,GAAG,WAAR,SACI,qBAAKA,GAAG,MAAMW,MAAO,CAAC0D,IAAK,MAAOb,KAAM,OAAxC,SAAgD,0DAIxC,cAAfnD,EAAMS,KAEP,sBAAKd,GAAG,oBAAoBW,MAAO,CAAC8D,QAAS,IAAKC,WAAY,cAA9D,UACI,wBAAQ/D,MAAO,CAACgE,UAAW,QAA3B,SAAqCtE,EAAMuE,YAC3C,sBAAKlE,UAAU,QAAf,UACI,iCAAQ,mBAAGA,UAAU,cAAcV,GAAG,SAAS6E,QAAS,kBVzB5D3D,EUyByEb,EAAMyE,UVxB3FvC,SACAtB,EAASC,GAFb,IAAgBA,OU0BI,sBAAKR,UAAU,SAAf,UACI,mBAAGV,GAAG,eAAeW,MAAO,CAACyB,WAAY,QAAzC,kBACA,sBAAK1B,UAAU,eAAeV,GAAG,aAAa6E,QAzClE,SAA+BxD,GAE3B,GAAkB,eAAdL,EAA2B,CAE3B,IAAMkC,EAAOvB,SAASC,eAAe,cAAcuB,wBACnD4B,QAAQC,IAAI9B,GAEZ,IAAMR,EAAcQ,EAAKf,MAIzBK,EAFsBnB,EAAEkC,QAAUL,EAAKM,KAEZd,KA8B+DuC,YAAapC,EAAWqC,aAAcrC,EAAWsC,UAAW1B,EAAS2B,WAAY3B,EAAS4B,YAAapC,EAAMqC,YAAarC,EAAxM,UACI,qBAAKvC,UAAU,eAAeV,GAAG,aACjC,qBAAKA,GAAG,oBAEZ,mBAAGU,UAAU,KAAKV,GAAG,WAAWW,MAAO,CAACyB,WAAY,OAApD,2BAOT/B,EAAMkF,MC2NNC,MAjUf,WAII,IA8BIC,EACAC,EA/BEC,EAAgB,CAAC,aAAc,QAAS,QAAS,YACjDC,EAAiB,CAAC,YAClBC,EAAiB,CAAC,QAAS,SAAU,UAAW,aAChDC,EAAiB,CAAC,cAAe,aAAc,YAE/CC,EAAa,CAAC,wEAAyE,wEAAyE,yEAChKC,EAAoB,CAAC,YAAa,OAAQ,YAAa,cAAe,gBAAiB,UAAW,OAClGC,EAAqB,CAAC,SAAU,WAAY,QAAS,SAAU,OAAQ,OAAQ,QAAS,cAAe,UAEvGC,EAAsB,CAAC,GAAG,GAAG,GAAG,iDAAkD,6BAA8B,4BAb1G,EAgBkBC,oBAAS,GAhB3B,mBAgBLC,EAhBK,KAgBKC,EAhBL,OAkB0BF,mBAAS,YAlBnC,mBAkBLG,EAlBK,KAkBQC,EAlBR,OAoBsCJ,mBAAS,GApB/C,mBAoBLK,EApBK,KAoBcC,EApBd,OAsBcN,mBAASR,GAtBvB,mBAsBLrF,EAtBK,KAsBEoG,EAtBF,OAwBYP,mBAAS,IAxBrB,mBAwBLZ,EAxBK,KAwBCoB,EAxBD,OA0BsBR,qBA1BtB,mBA0BLrB,EA1BK,KA0BM8B,EA1BN,OA4BsBT,qBA5BtB,oBA4BLvB,GA5BK,MA4BMiC,GA5BN,SA8BsBV,mBAAS,CAAClC,MAAM,EAAOC,WAAW,EAAOC,KAAK,IA9BpE,qBA8BLP,GA9BK,MA8BMkD,GA9BN,SAgCoCX,mBAASY,GAhC7C,qBAgCLC,GAhCK,MAgCaC,GAhCb,MA6OZ,SAASC,KAEL,IAAoC,IAAjCZ,EAAYa,QAAQ,QAAe,CAIlC,GAAGX,GAAqB,GAAKA,IAAsBlG,EAAM8G,QAAiC,SAAvB3B,EAA8B,CAC7F,IAAI4B,EAAS1F,SAASC,eAAT,sBAAuC4E,EAAoB,IAAKc,UAC7E3F,SAASC,eAAe,QAAQ2F,UAAYF,EAAO,QAGlD,GAAyB,IAAtBb,GAAkD,OAAvBf,EAA4B,CAC3D,IAAI4B,EAAS1F,SAASC,eAAT,sBAAuC4E,EAAoB,IAAKc,UAGzE3F,SAASC,eAAe,QAAQ2F,UADjCf,EAAkB,GAAK,IACwBa,EAAO,KAETA,EAAO,SAItD,GAAyB,IAAtBb,GAAkD,OAAvBf,EAA4B,CAC3D,IAAI4B,EAAS1F,SAASC,eAAT,sBAAuCtB,EAAM8G,SAAUE,UACpE3F,SAASC,eAAe,QAAQ2F,UAAYF,EAAO,SAGlD,GAAGb,IAAsBlG,EAAM8G,QAAiC,SAAvB3B,EAA8B,CACxE,IAAI4B,EAAS1F,SAASC,eAAT,iBAAyC0F,UACtD3F,SAASC,eAAe,QAAQ2F,YAAcF,EAAO,KAGtDb,IAAsBlG,EAAM8G,QAAiC,SAAvB3B,EACrCgB,EAAqB,GACO,SAAvBhB,EACLgB,EAAqBD,EAAkB,GACZ,IAAtBA,GAAkD,OAAvBf,EAChCgB,EAAqBnG,EAAM8G,QACC,OAAvB3B,GACLgB,EAAqBD,EAAkB,IAyBnD,OACI,cAAC,IAAMgB,SAAP,UAEI,sBAAKxH,GAAG,QAAR,UAGI,cAAC,EAAD,CAAQc,KAAMwF,EAAahG,MAAOA,EAAOO,OAAQ2F,EAAmBjB,KAAMA,EAAM3B,UAAWA,GAAWkB,UAAWA,EAAWF,UAAWA,GAAWJ,UAAWwC,KAE7J,sBAAKhH,GAAG,cAAciF,YA3QlC,SAAmB5D,GAEfgF,GAAU,IAyQ4ChB,YAvQ1D,SAAmBhE,GAEZ+E,SAEgBqB,IAAZ/B,IACCA,EAAUrE,EAAEqE,SAIbrE,EAAEqE,QAAQA,EAAU,IACnBD,EAAqB,OACrBC,EAAUrE,EAAEqE,QACZwB,MAEKxB,EAAQrE,EAAEqE,QAAU,KACzBD,EAAqB,KACrBC,EAAUrE,EAAEqE,QACZwB,QAsPsE/B,UAjPlF,SAAiB9D,GAEbgF,GAAU,GACVX,OAAU+B,GA8OF,UACI,mBAAGzH,GAAG,WAAW6E,QAxGjC,WAwBI,GAtBmB,cAAhByB,GAA+C,cAAhBA,GAA+C,iBAAhBA,GAAkD,cAAhBA,GAC/FC,EAAe,YACfG,EAASf,IACY,YAAhBW,GACLC,EAAe,aACfG,EAASd,IACJC,EAAe/B,SAASwC,IAAgC,cAAhBA,GAC7CC,EAAe,aACfG,EAASb,IACY,cAAhBS,GACLC,EAAe,aACfG,EAASZ,GACTvD,MAEoB,kBAAhB+D,GAAmCN,EAAkBlC,SAASwC,MAClEC,EAAe,gBACfG,EAASV,IAEbW,EAAQ,KAI4B,IAAjCL,EAAYa,QAAQ,QAAe,CAClCV,EAAqB,GACrB,IAAIY,EAAS1F,SAASC,eAAe,iBAAiB0F,UACtD3F,SAASC,eAAe,QAAQ2F,YAAcF,EAAO,OA6E7C,kBACA,mBAAG3G,UAAU,sBAAsBV,GAAG,WAAW6E,QAzOjE,WAEIY,EAAqB,OACrByB,QAuOY,mBAAGxG,UAAU,uBAAuBV,GAAG,eAAe6E,QApOtE,WAEIY,EAAqB,KACrByB,QAkOY,mBAAGxG,UAAU,cAAcV,GAAG,WAAW6E,QA1BzD,WACIE,QAAQC,IAAIhE,GACO,cAAhBsF,IACkB,eAAdtF,GACCC,EAAS6D,GACTC,QAAQC,IAAIJ,KAEZ7C,QAoBI,mBAAGrB,UAAU,eAAeV,GAAG,YAAY6E,QAASvC,OAExD,wBAAQ5B,UAAU,aAAamE,QAjO3C,WAII,GAAmB,aAAhByB,EAC0B,IAAtBE,GACCD,EAAe,aACfG,EAAS,KACkB,IAAtBF,GACLD,EAAe,aACfG,EAASd,IACkB,IAAtBY,GACLD,EAAe,aACfG,EAASb,IACkB,IAAtBW,GACLD,EAAe,gBACfG,EAASV,KAETO,EAAeZ,EAAca,EAAkB,IAC/CE,EAAS,UAIZ,GAAmB,cAAhBJ,EACJC,EAAe,WACfG,EAAS,SAGR,GAAmB,cAAhBJ,EACqB,IAAtBE,GACCD,EAAe,aACfG,EAASZ,KAETS,EAAeV,EAAeW,EAAkB,IAChDE,EAAS,IACTC,EAAQ,sBAAK3G,GAAG,oBAAR,UAA4B,4BAAG,oDAAgB6F,EAAeW,EAAkB,SAAkB,4BAAG,6DAIhH,GAAmB,cAAhBF,EACJM,EAAab,EAAWS,EAAkB,IAC1CK,GAAaf,EAAeU,EAAkB,IAC9CD,EAAe,aACfG,EAAS,SAGR,GAAmB,iBAAhBJ,EACqB,IAAtBE,GAAiD,IAAtBA,GAAiD,IAAtBA,GACrDD,EAAeP,EAAkBQ,EAAkB,IACnDE,EAAS,IACTC,EAAQ,sBAAK3G,GAAG,oBAAoBW,MAAO,CAACC,gBAAiB,QAAS8G,eAAgB,iBAA9E,UAAgG,4BAAI1B,EAAkBQ,EAAkB,KAAO,qBAAK9F,UAAU,cAAcV,GAAE,sBAAiBgG,EAAkBQ,EAAkB,IAApF,SAA0F,qBAAK9F,UAAU,UAAUV,GAAE,kBAAagG,EAAkBQ,EAAkB,aAClS,IAAtBA,GACLD,EAAeP,EAAkBQ,EAAkB,IACnDE,EAAS,IACTC,EAAQ,qBAAK3G,GAAG,oBAAR,SAA4B,2CAAYkG,EAAoBM,EAAkB,WAEtFD,EAAe,iBACfG,EAAST,SAIZ,GAAmB,kBAAhBK,EACJ,OAAOE,GACH,KAAK,EACDS,GAAoBF,GACpB,MACJ,KAAK,EACDE,GAAoBU,GACpB,MACJ,KAAK,EACDV,GAAoBW,GACpB,MACJ,KAAK,EACDX,GAAoBY,GACpB,MACJ,KAAK,EACDZ,GAAoBa,GACpB,MACJ,KAAK,EACDb,GAAoBc,GACpB,MACJ,KAAK,EACDd,GAAoBe,GACpB,MACJ,KAAK,EACDf,GAAoBgB,GACpB,MACJ,KAAK,EACDhB,GAAoBiB,QAS3B,GAAmB,SAAhB5B,GAA0C,cAAhBA,GAA+C,QAAhBA,EAAsB,CACrE3E,SAASC,eAAT,kBAAmC0E,IACtC3F,MAAM6C,KACbsD,GAAa,CAAC7C,KAAsB,SAAhBqC,GAAiC1C,GAAUK,KAAMC,UAA2B,cAAhBoC,GAAsC1C,GAAUM,UAAWC,IAAqB,QAAhBmC,GAAgC1C,GAAUO,MAE1L2C,GAAa,CAAC7C,KAAsB,SAAhBqC,GAAgC1C,GAAUK,KAAMC,UAA2B,cAAhBoC,GAAqC1C,GAAUM,UAAWC,IAAqB,QAAhBmC,GAA+B1C,GAAUO,MAM/L,IAAoC,IAAjCmC,EAAYa,QAAQ,SAAkC,kBAAhBb,EAAiC,CACtEG,EAAqB,GACrB,IAAIY,EAAS1F,SAASC,eAAe,iBAAiB0F,UACtD3F,SAASC,eAAe,QAAQ2F,YAAcF,EAAO,eCzMlDc,MAff,WACI,OACI,sBAAKnI,GAAG,QAAQU,UAAU,OAA1B,UACI,sBAAKV,GAAG,cAAR,UACI,mBAAGA,GAAG,WAAN,kBACA,mBAAGU,UAAU,sBAAsBV,GAAG,aACtC,mBAAGU,UAAU,uBAAuBV,GAAG,iBACvC,mBAAGU,UAAU,cAAcV,GAAG,aAC9B,mBAAGU,UAAU,eAAeV,GAAG,iBAEnC,qBAAKU,UAAU,aAAaC,MAAO,CAACyH,OAAQ,kBAAmBC,OAAQ,iBCIpEC,MAXf,WAEI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,QCLZC,IAASC,OAAO,cAAC,EAAD,IAAa7G,SAASC,eAAe,W","file":"static/js/main.cd46f171.chunk.js","sourcesContent":["// NOTE YOU HAVE TO FIRSTLY WRITE \"npm i\" FOR INSTALLING ALL THE NODE_MODULES WHICH ARE LISTED IN THE PACKAGE.JSON FILE NEEDED FOR THE PROJECT\r\n\r\nimport React from \"react\";\r\n\r\n// This is only returning that part where I have written the text: \"iPod.js\", and which is animating.\r\nfunction HeadingOnScreen(){\r\n    return <h4 id=\"ipodjs\"><center>iPod.js</center></h4>;\r\n}\r\n\r\nexport default HeadingOnScreen;","import React from \"react\";\r\nimport HeadingOnScreen from \"./HeadingOnScreen\";\r\n\r\n// This the function for generalising the template which is used for all menus\r\nfunction Menu(props){\r\n    return(\r\n        <div id=\"menu\">\r\n            {/* Here First of all we are requesting the animated text to be shown here */}\r\n            <HeadingOnScreen></HeadingOnScreen>\r\n            <ul>\r\n                {/* Here we are mapping the items array given in props accoeding to which we have to show the elements of the menu */}\r\n                {/* Also we are checking from the props which option is selected and accordingly giving them a blue bg, and also showing the arrow of that option, hiding all other arrows */}\r\n                {props.items.map((item, index) => {\r\n                    return (\r\n                        <div key={index+1} className=\"li-menu-div\" id={`li-menu-div-${index+1}`} style={{backgroundColor: props.option===index+1 && \"rgb(97, 97, 248)\"}}>\r\n                            <li>{item}<i className={`fas fa-chevron-right ${props.menu}-arrow`}  id={`${props.menu}-arrow-${index+1}`} style={{display: props.option===index+1 ? \"inline-block\" : \"none\"}}></i></li>\r\n                        </div>\r\n                )})}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","// Declaring all the GLobals\r\nvar audio, duration, interval;\r\n\r\nvar isPlaying = 'notStarted';\r\n\r\n// Function for creating New Instance of the Audio Object\r\nfunction newAudio(url){\r\n    audio = new Audio(url);\r\n\r\n    // Getting the Duration of the Song and displaying it on the player\r\n    audio.addEventListener('canplay', function(e){\r\n        duration =  Math.round(audio.duration);\r\n        var minutes = Math.floor(duration/60);\r\n        var seconds = duration%60;\r\n        if (seconds<10){\r\n            if (isPlaying !== \"notStarted\"){\r\n            document.getElementById(\"duration\").innerHTML = `${minutes} :0${seconds.toPrecision(1)}`;\r\n            }\r\n        }\r\n        else{\r\n            if (isPlaying !== \"notStarted\"){\r\n            document.getElementById(\"duration\").innerHTML = `${minutes}:${seconds.toPrecision(2)}`;\r\n            }\r\n        }\r\n    });\r\n    // Callback to Play Function\r\n    play();\r\n}\r\n\r\n// Play Function\r\nfunction play(){\r\n    isPlaying = 'playing';\r\n    // Playing the audio object created above\r\n    audio.play();\r\n    // Getting the current duration of song and getting it displayed after each second\r\n    // Also here we are moving the progress bar also\r\n    interval = setInterval(function(){\r\n        if (isPlaying !== \"notStarted\"){\r\n            let currentTime = Math.round(audio.currentTime) \r\n            let minutes = Math.floor(currentTime/60);\r\n            let seconds = currentTime%60;\r\n            // Updating the current time each second\r\n            if (seconds<10){\r\n                document.getElementById(\"current-time\").innerHTML = minutes + \":0\" + seconds.toPrecision(1);\r\n            }\r\n            else{\r\n                document.getElementById(\"current-time\").innerHTML = minutes + \":\" + seconds.toPrecision(2);\r\n            }\r\n            // Updating the progress bar each second\r\n            // I am using this just for increasing the speed of updation of width\r\n            // Here I will not round the current time and thus the time would be very accurate and thus it woul be updated very fast\r\n            let currentTimeAccurate = audio.currentTime;\r\n            document.getElementById(\"progress\").style.width = `${(currentTimeAccurate/duration)*100}%`;\r\n            document.getElementById(\"progress-tip\").style.marginLeft = `${((currentTimeAccurate/duration)*100)-5}%`;\r\n        }\r\n        if(audio.currentTime === audio.duration){\r\n            clearInterval(interval);\r\n        }\r\n    }, 100);\r\n}\r\n\r\n// Pause Function\r\nfunction pause(){\r\n    isPlaying = 'paused';\r\n    // Stoping the updataion of the current duration after pausing the song so that computer memory dont get wasted\r\n    clearInterval(interval)\r\n    // Pausing the audo Object created above\r\n    audio.pause();\r\n}\r\n\r\n// Stop Function\r\nfunction stop(){\r\n    // Now our work is to pause the song and then set the Current Time of the song to 00:00 second. This task would act like that we have stopped the current song.\r\n    if(isPlaying !== \"notStarted\"){\r\n        clearInterval(interval)\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n    }\r\n        \r\n    isPlaying = 'notStarted';\r\n}\r\n// Replay Function\r\n// Here We have to Stop The Song First and Then again Play It.\r\nfunction replay(url){\r\n    stop();\r\n    newAudio(url);\r\n}\r\n\r\n//--------------------------- Functions for setting progress of song on click or on dragging --------------------\r\n\r\n// This One is When The User Clicks On Any Portion of the SongProgress Bar, The Song's Duration Would Reach to that Part\r\nfunction setProgress(xPos, playerWidth) {\r\n    // This is the location of click from Left of the player div In Percentage \r\n    const xPosPercent = (xPos/playerWidth)*100;\r\n    // Now changing the Left Margin of Progress Tip and width of Song Progress According to the percentage\r\n    document.getElementById(\"progress-tip\").style.marginLeft = xPosPercent + \"%\";\r\n    document.getElementById(\"progress\").style.width = (xPosPercent+1.5) + \"%\";\r\n    // Now Changing the current time of the song\r\n    const currentTime = (xPosPercent/100)*duration;\r\n    audio.currentTime = currentTime;\r\n}\r\n\r\n// Functions for Changing the current time of song by dragging the Progress-Tip\r\n\r\n// Function for starting of drag event\r\n// Here we have to check that the target which the user is dragging is Progress-tip and if it is so then set active to true, which means that drag event has started\r\n// Also the current time of the song would be changed only if any song is in Playing State or in Paused State, but it should not be in notStarted State\r\nvar active = false;\r\nfunction dragStart(e) {\r\n    const dragItem = document.querySelector(\"#progress-tip\");\r\n    if (isPlaying !== \"notStarted\"){\r\n        if (e.target === dragItem) {\r\n            active = true;\r\n        }\r\n    }\r\n}\r\n\r\n// Function which will be executed during the dragging is going on\r\nfunction drag(e) {\r\n    // Defining the drag-container as Player-Div and drag-item as Progress-Tip\r\n    const container = document.querySelector(\"#player-bar\");\r\n    // These are the CoOrdinates of the player div inside which progress of our song is going on\r\n    const rect = container.getBoundingClientRect();\r\n    // This is the total width of the player div\r\n    const playerWidth = rect.width;\r\n    if (active) {\r\n        // As by default, the divs has a nature of preventing the events like drag, therefore, we use preventDefault() method to prevent their default nature of preventing the drag to occur\r\n        e.preventDefault();\r\n        // Finding the X- coordinate of the current drag\r\n        var currentX;\r\n        if (e.type === \"touchmove\") {\r\n        currentX = e.touches[0].clientX - rect.left;\r\n        } else {\r\n        currentX = e.clientX - rect.left;\r\n        }\r\n        // Setting the progress of current song according to the current X-coordinate\r\n        setProgress(currentX, playerWidth);\r\n    }\r\n}\r\n\r\n// Function for ending the drag\r\nfunction dragEnd(e) {\r\n    // At the time of ending the drag, we set active to false which indicates that drag is now over\r\n    active = false;\r\n}\r\n\r\n\r\n// Exporting All The Functions So We Can Use Them Inside The Frame.jsx and Screen.jsx\r\nexport {newAudio, play, pause, stop, replay, setProgress, dragStart, drag, dragEnd, isPlaying};","export default __webpack_public_path__ + \"static/media/Forest.551e56a3.jpg\";","export default __webpack_public_path__ + \"static/media/Beach.0871b01e.jpg\";","export default __webpack_public_path__ + \"static/media/City.ecf18566.jpg\";","export default __webpack_public_path__ + \"static/media/Valley.3a7beb2e.jpg\";","export default __webpack_public_path__ + \"static/media/Desert.12f048ff.jpg\";","export default __webpack_public_path__ + \"static/media/Food.65c9a306.jpg\";","export default __webpack_public_path__ + \"static/media/Mountain.f17757f8.jpg\";","export default __webpack_public_path__ + \"static/media/Ocean.ff4792da.jpg\";","export default __webpack_public_path__ + \"static/media/Countryside.1591a567.jpg\";","// NOTE YOU HAVE TO FIRSTLY WRITE \"npm i\" FOR INSTALLING ALL THE NODE_MODULES WHICH ARE LISTED IN THE PACKAGE.JSON FILE NEEDED FOR THE PROJECT\r\n\r\n// Importing All The Stuff Needed\r\nimport React, {useEffect} from \"react\";\r\nimport Menu from \"./Menu\";\r\n// Importing All The Wallpapers Which We Have To Change According To The User\r\nimport Forest from \"../Wallpapers/Forest.jpg\";\r\nimport Beach from \"../Wallpapers/Beach.jpg\";\r\nimport City from \"../Wallpapers/City.jpg\";\r\nimport Valley from \"../Wallpapers/Valley.jpg\";\r\nimport Desert from \"../Wallpapers/Desert.jpg\";\r\nimport Food from \"../Wallpapers/Food.jpg\";\r\nimport Mountain from \"../Wallpapers/Mountain.jpg\";\r\nimport Ocean from \"../Wallpapers/Ocean.jpg\";\r\nimport Countryside from \"../Wallpapers/Countryside.jpg\";\r\n// Importing all The Required Funnctions of Player.js File for Functionning odf Our Music Player\r\nimport {replay, setProgress, isPlaying, dragStart, drag, dragEnd} from \"./Player\"; \r\n// Also here we are getting to know which option is selected at this time from the props, which we are passing ahead to the Menu which is going to be rendered.\r\nfunction Screen(props){\r\n\r\n    var obj = props.isToggled;\r\n\r\n    // This hook I have used to render according to the props that whenever we reopen our wifi, bluetooth or gps page it shuld look like as we left it previously.\r\n    useEffect(()=>{\r\n        let settingsArr = [\"WiFi\", \"Bluetooth\", \"GPS\"]\r\n        if(settingsArr.includes(props.menu)){\r\n            let toggler = document.getElementById(`toggler-${props.menu}`);\r\n            let togglerDiv = document.getElementById(`toggler-div-${props.menu}`);\r\n            if(props.menu === \"WiFi\"){\r\n                if(obj.WiFi){\r\n                    togglerDiv.style.backgroundColor = \"orangered\";\r\n                    toggler.style.left = \"55%\";\r\n                }else{\r\n                    togglerDiv.style.backgroundColor = null;\r\n                    toggler.style.left = null;\r\n                }\r\n            }else if(props.menu === \"Bluetooth\"){\r\n                if(obj.Bluetooth){\r\n                    togglerDiv.style.backgroundColor = \"orangered\";\r\n                    toggler.style.left = \"55%\";\r\n                }else{\r\n                    togglerDiv.style.backgroundColor = null;\r\n                    toggler.style.left = null;\r\n                }\r\n            }else if(props.menu === \"GPS\"){\r\n                if(obj.GPS){\r\n                togglerDiv.style.backgroundColor = \"orangered\";\r\n                toggler.style.left = \"55%\";\r\n                }else{\r\n                    togglerDiv.style.backgroundColor = null;\r\n                    toggler.style.left = null;\r\n                }\r\n            }\r\n        }\r\n        //------------------------------- Logic for our Catch Me Game --------------------------------------\r\n        else if(props.menu === \"CatchMe\"){\r\n            const box = document.getElementById(\"box\");\r\n\r\n            box.addEventListener(\"mouseover\", function(){\r\n                let top = Math.floor(Math.random()*(86));\r\n                let left = Math.floor(Math.random()*(88));\r\n                box.style.top = top + \"%\";\r\n                box.style.left = left + \"%\";\r\n            });\r\n        }\r\n\r\n    }, [obj, props.isToggled, props.menu])\r\n\r\n    // The function for Changing the Song Time according to Users Click on the player progress bar\r\n    // Here in this function internally We are using the function of Player.jsx\r\n    function changeDurationByClick(e){\r\n        // The current time of the song would be changed only if any song is in Playing State or in Paused State, but it should not be in notStarted State\r\n        if (isPlaying !== \"notStarted\"){\r\n            // These are the CoOrdinates of the player div inside which progress of our song is going on\r\n            const rect = document.getElementById(\"player-bar\").getBoundingClientRect();\r\n            console.log(rect);\r\n            // This is the total width of the player div\r\n            const playerWidth = rect.width;\r\n            // This is the Xcoordinate of user click From Left Of The Player Div\r\n            const clickLocation = e.clientX - rect.left;\r\n            // Setting the progress of song in the song div according to the coordinate of click\r\n            setProgress(clickLocation, playerWidth);\r\n        }\r\n    }\r\n\r\n    const arr = [\"mainMenu\", \"gamesMenu\", \"musicMenu\", \"songsMenu\", \"settingsMenu\", \"wallpaperMenu\"]\r\n\r\n    if(arr.includes(props.menu)){\r\n        return(\r\n            <div id=\"screen\"  style={{backgroundImage: `url(${props.wallpaper})`}}>\r\n                <Menu menu={props.menu} items={props.items} option={props.option}></Menu>\r\n            </div>\r\n        )\r\n    }else if(props.menu === \"CoverFlow\"){\r\n        return <div id=\"screen\"  style={{backgroundImage: `url(${props.wallpaper})`}}></div>\r\n    }else if(props.menu === \"CatchMe\"){\r\n        return (\r\n            <div id=\"screen-without-bg\" style={{padding: \"15px\"}}>\r\n                <div id=\"viewport\">\r\n                    <div id=\"box\" style={{top: \"45%\", left: \"45%\"}}><p>Catch Me If You Can</p></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else if(props.menu === \"audioPage\"){\r\n        return (\r\n            <div id=\"screen-without-bg\" style={{padding: \"0\", alignItems: \"flex-start\"}}>\r\n                <center style={{marginTop: \"25px\"}}>{props.audioName}</center>\r\n                <div className=\"audio\">\r\n                    <center><i className=\"fas fa-undo\" id=\"replay\" onClick={() => replay(props.audioLink)}></i></center>\r\n                    <div className=\"player\">\r\n                        <p id=\"current-time\" style={{marginLeft: \"13px\"}}>0:00</p>\r\n                        <div className=\"progress-div\" id=\"player-bar\" onClick={changeDurationByClick} onMouseDown={dragStart} onTouchStart={dragStart} onMouseUp={dragEnd} onTouchEnd={dragEnd} onMouseMove={drag} onTouchMove={drag}>\r\n                            <div className=\"progress-bar\" id=\"progress\"></div>\r\n                            <div id=\"progress-tip\"></div>\r\n                        </div>\r\n                        <p className=\"ls\" id=\"duration\" style={{marginLeft: \"5px\"}}>0:00</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return props.text;\r\n    }\r\n}\r\n\r\nexport default Screen;","// NOTE YOU HAVE TO FIRSTLY WRITE \"npm i\" FOR INSTALLING ALL THE NODE_MODULES WHICH ARE LISTED IN THE PACKAGE.JSON FILE NEEDED FOR THE PROJECT\r\n\r\n// Importing All the Stuff Needed\r\nimport React, {useState} from \"react\";\r\nimport Screen from \"./Screen\";\r\n// Here I am Importing all the Photos which arre to be used when Changing Wallpapers\r\nimport Forest from \"../Wallpapers/Forest.jpg\";\r\nimport Beach from \"../Wallpapers/Beach.jpg\";\r\nimport City from \"../Wallpapers/City.jpg\";\r\nimport Valley from \"../Wallpapers/Valley.jpg\";\r\nimport Desert from \"../Wallpapers/Desert.jpg\";\r\nimport Food from \"../Wallpapers/Food.jpg\";\r\nimport Mountain from \"../Wallpapers/Mountain.jpg\";\r\nimport Ocean from \"../Wallpapers/Ocean.jpg\";\r\nimport Countryside from \"../Wallpapers/Countryside.jpg\";\r\n// Here I am importing the Functions from The Player File which is responsible for Playing Songs, Changing Songs, Functionning of the Player and all that stuff\r\nimport {newAudio, play, pause, stop, isPlaying} from \"./Player\"\r\n\r\n\r\n// This is the main Frame of our iPod which contains mainly 2 items : The Wheel and The Screen\r\nfunction Frame(){\r\n// ------------------------------ Global Variables and Hooks Section ------------------------------------------//\r\n\r\n    // These are the arrays containing the Items of Different Menus, which would be later on passed in to the props of Screen depending on which menu we are currently.\r\n    const mainMenuItems = [\"Cover Flow\", \"Games\", \"Music\", \"Settings\"];\r\n    const gamesMenuItems = [\"Catch Me\"];\r\n    const musicMenuItems = [\"Songs\", \"Albums\", \"Artists\", \"Playlists\"];\r\n    const songsMenuItems = [\"Jeena Jeena\", \"Kaun Tuzhe\", \"Dooriyan\"];\r\n    // These are the audio links from which we are playing Songs. For Now I am not using The Fetch Methods and all, But Yes In Future We can do that and can  Extend this thing to the Searching of any Song and Playing it Feature.\r\n    const audioLinks = [\"https://aac.saavncdn.com/940/2ef7c9587cefad1ac29b94add29b6c40_320.mp4\", \"https://aac.saavncdn.com/569/6a016eb165b341281a97bc570f70c1d4_320.mp4\", \"https://aac.saavncdn.com/211/dd5a448a9d67996b19aeb405a315cc17_320.mp4\"]\r\n    const settingsMenuItems = [\"Wallpaper\", \"WiFi\", \"Bluetooth\", \"Orientation\", \"Notifications\", \"Privacy\", \"GPS\"];\r\n    const wallpaperMenuItems = [\"Forest\", \"Mountain\", \"Ocean\", \"Valley\", \"Food\", \"City\", \"Beach\", \"Countryside\", \"Desert\"];\r\n    // This array is for storing the text which we have to show on the pages of settingsOptionsText\r\n    const settingsOptionsText = [\"\",\"\",\"\",\"Sorry, This Device Only Supports Portrait View\", \"No Notifications Currently\", \"Your device is Protected\"];\r\n    // These are Some of the variables created by react hooks, so that we can track changes and re-render the iPod on the changes\r\n    // This one is for keeping track of motion of mouse over the wheel \r\n    const [isMoving, setMoving] = useState(false);\r\n    // This is for keeping the track of current menu, and by default it is in main menu\r\n    const [currentMenu, setCurrentMenu] = useState(\"mainMenu\");\r\n    // This is for changing the options of menu\r\n    const [currentMenuOption, setCurrentMenuOption] = useState(1);\r\n    // This one is for changing the items as the current Menu changes\r\n    const [items, setItems] = useState(mainMenuItems);\r\n    // This one is for setting the text/HTML on the Pages in Which We have to give Some Text\r\n    const [text, setText] = useState(\"\");\r\n    // This one is for changing the Audio Links as we change the Song\r\n    const [audioLink, setAudioLink] = useState();\r\n    // This one is for changing the Audio Name as we change the Song\r\n    const [audioName, setAudioName] = useState();\r\n    // This one is for keeping the track of the toggler of bluetooth,, wifi and gps section\r\n    const [isToggled, setIsToggled] = useState({WiFi: false, Bluetooth: false, GPS: false});\r\n    // This one is for changing the Current Wallpaper\r\n    const [currentWallpaper, setCurrentWallpaper] = useState(Forest);\r\n    // These 2 variables are for tracking the direction of mouse move on our wheel, if the user is moving upwards or downwards\r\n    var wheelMoveDirection;\r\n    var clientY;\r\n\r\n// ------------------------- Handling of Mouse Events and Changing Direction Section -------------------//\r\n\r\n    // This is the mousedown event.\r\n    // Basically when the use press on the mouse button and move the mouse on the wheel while holding the mouse we should change the options\r\n    function mouseDown(e){\r\n        // Here we changing isMoving from false to true, and depicting that now we are moving the mouse over the wheel\r\n        setMoving(true);\r\n    }\r\n    function mouseMove(e){\r\n        // This event works only when it see that user has a hold on mouse click button\r\n        if(isMoving){\r\n            // If user is starting to move the mouse its initial position would be captured for the first time\r\n            if(clientY === undefined){\r\n                clientY = e.clientY;\r\n            }\r\n            // Now after that after a regular interval of 13px of movement we changes the selected option\r\n            // And now if the Y-Coordinate is increasing, then we are going downwards\r\n            if(e.clientY-clientY > 13){\r\n                wheelMoveDirection = \"down\";\r\n                clientY = e.clientY;\r\n                changeCurrentMenuOption();\r\n            // If Y-Coordinate is decreasing then mouse is moving up\r\n            }else if(clientY-e.clientY > 13){\r\n                wheelMoveDirection = \"up\";\r\n                clientY = e.clientY;\r\n                changeCurrentMenuOption();\r\n            }\r\n        }\r\n    }\r\n    // Now this event is handling when the user leaves the click, and now isMoving should become false as now user have stopped changing the options\r\n    function mouseUp(e){\r\n        // Here we change isMoving to false and also changes Y-Coordinate to undefined so that next time when we start moving again it would be initialized from the position from where user has started this time\r\n        setMoving(false);\r\n        clientY = undefined;\r\n    }\r\n\r\n// ------------------------------ Handling Button Events and Changing Menu Section ----------------------------//\r\n\r\n    // Now these functions are called when the user clicks on the btns of the wheel\r\n    // This is for the forward function and it selects the next option of the menu\r\n    function forward(){\r\n        // Here we change the wheel direction to downwards and then forwards to changeCurrentMenuOption to go to the next option\r\n        wheelMoveDirection = \"down\";\r\n        changeCurrentMenuOption();\r\n    }\r\n    // This function is for going to previous option\r\n    function backward(){\r\n        // Here we change the wheel direction to upwards and then forwards to changeCurrentMenuOption to go to the previous option\r\n        wheelMoveDirection = \"up\";\r\n        changeCurrentMenuOption();\r\n    }\r\n\r\n    // This function runs when we click on the center button which opens the selected option on the  screen \r\n    function changeMenu(){\r\n        // Here we check that on which menu was we at the time of click and which option was selected and then changes the currentMenu accordingly to make it to that meenu which we have to show after the click\r\n\r\n        // For checking click inside mainMenu\r\n        if(currentMenu === \"mainMenu\"){\r\n            if(currentMenuOption === 1){\r\n                setCurrentMenu(\"CoverFlow\");\r\n                setItems([]);\r\n            }else if(currentMenuOption === 2){\r\n                setCurrentMenu(\"gamesMenu\");\r\n                setItems(gamesMenuItems);\r\n            }else if(currentMenuOption === 3){\r\n                setCurrentMenu(\"musicMenu\");\r\n                setItems(musicMenuItems);\r\n            }else if(currentMenuOption === 4){\r\n                setCurrentMenu(\"settingsMenu\");\r\n                setItems(settingsMenuItems);\r\n            }else{\r\n                setCurrentMenu(mainMenuItems[currentMenuOption-1]);\r\n                setItems([]);\r\n            }\r\n        }\r\n        // For Checking Click inside game Menu\r\n        else if(currentMenu === \"gamesMenu\"){\r\n            setCurrentMenu(\"CatchMe\");\r\n            setItems([]);\r\n        }\r\n        // For Checking click inside musicMenu\r\n        else if(currentMenu === \"musicMenu\"){\r\n            if(currentMenuOption === 1){\r\n                setCurrentMenu(\"songsMenu\");\r\n                setItems(songsMenuItems);\r\n            }else{\r\n                setCurrentMenu(musicMenuItems[currentMenuOption-1]);\r\n                setItems([]);\r\n                setText(<div id=\"screen-without-bg\"><p><center>New {`${musicMenuItems[currentMenuOption-1]}`}</center></p><p><center>Coming Soon</center></p></div>);\r\n            }\r\n        }\r\n        // For Checking Click inside the SongsMenu where We Have to Load the Song according to the User's Click\r\n        else if(currentMenu === \"songsMenu\"){\r\n            setAudioLink(audioLinks[currentMenuOption-1]);\r\n            setAudioName(songsMenuItems[currentMenuOption-1]);\r\n            setCurrentMenu(\"audioPage\");\r\n            setItems([]);\r\n        }\r\n        // For Checking Click inside settingsMenu\r\n        else if(currentMenu === \"settingsMenu\"){\r\n            if(currentMenuOption === 2 || currentMenuOption === 3 || currentMenuOption === 7){\r\n                setCurrentMenu(settingsMenuItems[currentMenuOption-1]);\r\n                setItems([]);\r\n                setText(<div id=\"screen-without-bg\" style={{backgroundColor: \"white\", justifyContent: \"space-between\"}}><p>{settingsMenuItems[currentMenuOption-1]}</p><div className=\"toggler-div\" id={`toggler-div-${settingsMenuItems[currentMenuOption-1]}`}><div className=\"toggler\" id={`toggler-${settingsMenuItems[currentMenuOption-1]}`}></div></div></div>)\r\n            }else if(currentMenuOption !== 1){\r\n                setCurrentMenu(settingsMenuItems[currentMenuOption-1]);\r\n                setItems([]);\r\n                setText(<div id=\"screen-without-bg\"><center>{`${settingsOptionsText[currentMenuOption-1]}`}</center></div>);\r\n            }else{\r\n                setCurrentMenu(\"wallpaperMenu\")\r\n                setItems(wallpaperMenuItems);\r\n            }\r\n        }\r\n        // For Checking and Changing Wallpapers inside WallPaper Menu\r\n        else if(currentMenu === \"wallpaperMenu\"){\r\n            switch(currentMenuOption){\r\n                case 1:\r\n                    setCurrentWallpaper(Forest);\r\n                    break;\r\n                case 2:\r\n                    setCurrentWallpaper(Mountain);\r\n                    break;\r\n                case 3:\r\n                    setCurrentWallpaper(Ocean);\r\n                    break; \r\n                case 4:\r\n                    setCurrentWallpaper(Valley);\r\n                    break;\r\n                case 5:\r\n                    setCurrentWallpaper(Food);\r\n                    break;\r\n                case 6:\r\n                    setCurrentWallpaper(City);\r\n                    break;\r\n                case 7:\r\n                    setCurrentWallpaper(Beach);\r\n                    break;\r\n                case 8:\r\n                    setCurrentWallpaper(Countryside);\r\n                    break;\r\n                case 9:\r\n                    setCurrentWallpaper(Desert);\r\n                    break;\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n        // This is for checking the click on the Center button when we are inside the WiFI, Bluetooth or GPS page\r\n        // We are here changing the value of 1 of these 3 features to true and this makes toggler but to move to left and change color to orangered.\r\n        // Now here we are changing the value in object to true of whichever toggler is clicked and then we are passing it to the props of Screen.jsx where screen renders accordingly, if the toggles is enabled or diabled\r\n        else if(currentMenu === \"WiFi\" || currentMenu === \"Bluetooth\" || currentMenu === \"GPS\"){\r\n            let toggler = document.getElementById(`toggler-${currentMenu}`);\r\n            if(toggler.style.left){\r\n                setIsToggled({WiFi: currentMenu === \"WiFi\" ? false : isToggled.WiFi, Bluetooth: currentMenu === \"Bluetooth\" ? false : isToggled.Bluetooth, GPS: currentMenu === \"GPS\" ? false : isToggled.GPS});\r\n            }else{\r\n                setIsToggled({WiFi: currentMenu === \"WiFi\" ? true : isToggled.WiFi, Bluetooth: currentMenu === \"Bluetooth\" ? true : isToggled.Bluetooth, GPS: currentMenu === \"GPS\" ? true : isToggled.GPS});\r\n            }\r\n        }\r\n\r\n        // Now first checking that we are now on any menu or on a screen page\r\n        // Also we have to scroll the top of the new menu\r\n        if(currentMenu.indexOf(\"Menu\") !== -1 && currentMenu !== \"wallpaperMenu\" ){\r\n            setCurrentMenuOption(1);\r\n            let topPos = document.getElementById(\"li-menu-div-1\").offsetTop;\r\n            document.getElementById('menu').scrollTop = -(topPos-100);\r\n        }\r\n    }\r\n    // This function runs when we click on Menu written on wheel\r\n    function back(){\r\n        // Here we checks on which menu we are currently and then changes current menu to accordingly to come 1 step backwards\r\n        if(currentMenu === \"gamesMenu\" || currentMenu === \"musicMenu\" || currentMenu === \"settingsMenu\" || currentMenu === \"CoverFlow\"){\r\n            setCurrentMenu(\"mainMenu\");\r\n            setItems(mainMenuItems)    \r\n        }else if(currentMenu === \"CatchMe\"){\r\n            setCurrentMenu(\"gamesMenu\");\r\n            setItems(gamesMenuItems);\r\n        }else if(musicMenuItems.includes(currentMenu) || currentMenu === \"songsMenu\"){\r\n            setCurrentMenu(\"musicMenu\");\r\n            setItems(musicMenuItems); \r\n        }else if(currentMenu === \"audioPage\"){\r\n            setCurrentMenu(\"songsMenu\");\r\n            setItems(songsMenuItems);\r\n            stop();\r\n        }\r\n        else if(currentMenu === \"wallpaperMenu\" || settingsMenuItems.includes(currentMenu)){\r\n            setCurrentMenu(\"settingsMenu\");\r\n            setItems(settingsMenuItems);\r\n        }\r\n        setText(\"\");\r\n        // Now first checking that we are now on any menu or on a screen page\r\n        // And if we are on any menu than now since menu has changed, we also have to change the selected option and now have to select the first option\r\n        // Also we have to scroll the top of the new menu\r\n        if(currentMenu.indexOf(\"Menu\") !== -1){\r\n            setCurrentMenuOption(1);\r\n            let topPos = document.getElementById(\"li-menu-div-1\").offsetTop;\r\n            document.getElementById('menu').scrollTop = -(topPos-100);\r\n        }\r\n    }\r\n\r\n    // This function is for changing the options\r\n    function changeCurrentMenuOption(){\r\n        // Here first of all we are checking on which menu we are\r\n        if(currentMenu.indexOf(\"Menu\") !== -1){\r\n            // Here firstly we are checking that if we are on that option that for going downwards or upwards we have to scroll down or up, and then we are changing it accordingly\r\n\r\n            // 1st CASE: The currentMenuOption is such that now going to downwards we have to scroll up and also currentMenuOption is not the last one. \r\n            if(currentMenuOption >= 3 && currentMenuOption !== items.length && wheelMoveDirection === \"down\"){\r\n                let topPos = document.getElementById(`li-menu-div-${currentMenuOption + 1}`).offsetTop;\r\n                document.getElementById('menu').scrollTop = topPos-20;\r\n            }\r\n            // 2nd CASE: The currentMenuOption is now going upwards and it is not the First Option. \r\n            else if(currentMenuOption !== 1 && wheelMoveDirection === \"up\"){\r\n                let topPos = document.getElementById(`li-menu-div-${currentMenuOption - 1}`).offsetTop;\r\n                // console.log(true, currentMenuOption - 1, topPos);\r\n                if(currentMenuOption-1 <= 3){\r\n                    document.getElementById('menu').scrollTop = -(topPos-100);\r\n                }else{\r\n                    document.getElementById('menu').scrollTop = topPos+100;\r\n                }\r\n            }\r\n            // 3rd CASE: CurrentMenuOption is first one, and we have to go upwards which means now we have to go to the last option.\r\n            else if(currentMenuOption === 1 && wheelMoveDirection === \"up\"){\r\n                let topPos = document.getElementById(`li-menu-div-${items.length}`).offsetTop;\r\n                document.getElementById('menu').scrollTop = topPos-100;\r\n            }\r\n            // 4th CASE: CurrentMenuOption is the last one, and now we are going downwards which means now we have to go to the top.\r\n            else if(currentMenuOption === items.length && wheelMoveDirection === \"down\"){\r\n                let topPos = document.getElementById(`li-menu-div-1`).offsetTop;\r\n                document.getElementById('menu').scrollTop = -(topPos-100);\r\n            }\r\n            // Now we are checking on which option we currenlty are and on which we have to go and then changing currentMenuOption accordingly\r\n            if(currentMenuOption === items.length && wheelMoveDirection === \"down\"){\r\n                setCurrentMenuOption(1);\r\n            }else if(wheelMoveDirection === \"down\"){\r\n                setCurrentMenuOption(currentMenuOption+1);\r\n            }else if(currentMenuOption === 1 && wheelMoveDirection === \"up\"){\r\n                setCurrentMenuOption(items.length);\r\n            }else if(wheelMoveDirection === \"up\"){\r\n                setCurrentMenuOption(currentMenuOption-1);\r\n            }\r\n        }\r\n    }\r\n\r\n// -------------------------------- Music Player Section -------------------------------------------------------\r\n    // While Most of the Functions of Music Player is Written Inside Player.js file,\r\n    // But here I have Written One Main Function\r\n    // This is Called When The User Click on The Play Button\r\n    // It Furst of all, Detects on which menu the User is at, and if he/she is on the audioPage then, it checks if the Song was not Playing or Paused previously, then it makes a new instance of the Audio Object.\r\n    // Otherwise it resumes the song which was paused earlier\r\n    function playSong(){\r\n        console.log(isPlaying);\r\n        if(currentMenu === \"audioPage\"){\r\n            if(isPlaying === \"notStarted\"){\r\n                newAudio(audioLink);\r\n                console.log(audioName);\r\n            }else{\r\n                play();\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n        \r\n            <div id=\"frame\">\r\n                {/* ---------------Screen Section --------------------------------------------- */}\r\n                {/* Now in this section we are passing 2 props to Screen: 1.)To tell the screen which menu to be rendered, 2.)Which option is selected at present and should have a blue bg. */}\r\n                <Screen menu={currentMenu} items={items} option={currentMenuOption} text={text} isToggled={isToggled} audioLink={audioLink} audioName={audioName} wallpaper={currentWallpaper}></Screen>\r\n                {/* -----------------------------Wheel Section ----------------------------------------- */}\r\n                <div id=\"outer-wheel\" onMouseDown={mouseDown} onMouseMove={mouseMove} onMouseUp={mouseUp}>\r\n                    <p id=\"menu-btn\" onClick={back}>Menu</p>\r\n                    <i className=\"fas fa-fast-forward\" id=\"next-btn\" onClick={forward}></i>\r\n                    <i className=\"fas fa-fast-backward\" id=\"previous-btn\" onClick={backward}></i>\r\n                    <i className=\"fas fa-play\" id=\"play-btn\" onClick={playSong}></i>\r\n                    <i className=\"fas fa-pause\" id=\"pause-btn\" onClick={pause}></i>\r\n                </div>\r\n                <button className=\"center-btn\" onClick={changeMenu}></button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Frame;","// NOTE YOU HAVE TO FIRSTLY WRITE \"npm i\" FOR INSTALLING ALL THE NODE_MODULES WHICH ARE LISTED IN THE PACKAGE.JSON FILE NEEDED FOR THE PROJECT\r\n\r\nimport React from \"react\";\r\n\r\n// This is the Section where I have given the Reflection of the frame\r\nfunction Reflection(){\r\n    return(\r\n        <div id=\"frame\" className=\"refl\">\r\n            <div id=\"outer-wheel\">\r\n                <p id=\"menu-btn\">Menu</p>\r\n                <i className=\"fas fa-fast-forward\" id=\"next-btn\"></i>\r\n                <i className=\"fas fa-fast-backward\" id=\"previous-btn\"></i>\r\n                <i className=\"fas fa-play\" id=\"play-btn\"></i>\r\n                <i className=\"fas fa-pause\" id=\"pause-btn\"></i>\r\n            </div>\r\n            <div className=\"center-btn\" style={{border: \"1px black solid\", cursor: \"default\"}}></div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Reflection;","// NOTE YOU HAVE TO FIRSTLY WRITE \"npm i\" FOR INSTALLING ALL THE NODE_MODULES WHICH ARE LISTED IN THE PACKAGE.JSON FILE NEEDED FOR THE PROJECT\r\n\r\n// Importing all the stuff needed\r\nimport React from \"react\";\r\nimport Frame from \"./Frame\";\r\nimport Reflection from \"./Reflection\";\r\n\r\n// App Function which is our main app which would be rendered on the screen\r\nfunction App(){\r\n// This function is in turn rendering the frame and reflection components\r\n    return(\r\n        <div>\r\n            <Frame></Frame>\r\n            <Reflection></Reflection>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Exporting the APP function so that our index.js, which is the entry point of our project, can import this \r\nexport default App;","// NOTE YOU HAVE TO FIRSTLY WRITE \"npm i\" FOR INSTALLING ALL THE NODE_MODULES WHICH ARE LISTED IN THE PACKAGE.JSON FILE NEEDED FOR THE PROJECT\n\n// Importing All the Stuff Needed\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\n\n// Rendering our App.jsx which contains all the necessary Components in it\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}